/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Source file was org.kde.konsole.Session.xml
 *
 * qdbusxml2cpp is Copyright (C) The Qt Company Ltd. and other contributors.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef SESSIONADAPTOR_H
#define SESSIONADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "session/Session.h"
#include <QtCore/qcontainerfwd.h>

/*
 * Adaptor class for interface org.kde.konsole.Session
 */
class SessionAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.konsole.Session")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.konsole.Session\">\n"
"    <method name=\"environment\">\n"
"      <arg direction=\"out\" type=\"as\"/>\n"
"    </method>\n"
"    <method name=\"setEnvironment\">\n"
"      <arg direction=\"in\" type=\"as\" name=\"environment\"/>\n"
"    </method>\n"
"    <method name=\"setMonitorPrompt\">\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"isMonitorPrompt\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"setMonitorActivity\">\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"isMonitorActivity\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"setMonitorSilence\">\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"isMonitorSilence\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"setMonitorSilenceSeconds\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"seconds\"/>\n"
"    </method>\n"
"    <method name=\"setFlowControlEnabled\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"enabled\"/>\n"
"    </method>\n"
"    <method name=\"flowControlEnabled\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"sendText\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"text\"/>\n"
"    </method>\n"
"    <method name=\"runCommand\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"command\"/>\n"
"    </method>\n"
"    <method name=\"sendMouseEvent\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"buttons\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"column\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"line\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"eventType\"/>\n"
"    </method>\n"
"    <method name=\"processId\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"foregroundProcessId\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"setCodec\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"ay\" name=\"name\"/>\n"
"    </method>\n"
"    <method name=\"codec\">\n"
"      <arg direction=\"out\" type=\"ay\"/>\n"
"    </method>\n"
"    <method name=\"setTitle\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"role\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"title\"/>\n"
"    </method>\n"
"    <method name=\"title\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"role\"/>\n"
"    </method>\n"
"    <method name=\"shellSessionId\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"setTabTitleFormat\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"context\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"format\"/>\n"
"    </method>\n"
"    <method name=\"tabTitleFormat\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"context\"/>\n"
"    </method>\n"
"    <method name=\"setHistorySize\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"lines\"/>\n"
"    </method>\n"
"    <method name=\"historySize\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"setProfile\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"profileName\"/>\n"
"    </method>\n"
"    <method name=\"profile\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"copyInputToAllSessions\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"copyInputToSessions\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"ai\" name=\"sessions\"/>\n"
"      <annotation value=\"QList&lt;int&gt;\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </method>\n"
"    <method name=\"copyInputToNone\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"copyingSessions\">\n"
"      <arg direction=\"out\" type=\"ai\"/>\n"
"      <annotation value=\"QList&lt;int&gt;\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"feederSessions\">\n"
"      <arg direction=\"out\" type=\"ai\"/>\n"
"      <annotation value=\"QList&lt;int&gt;\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"getAllDisplayedText\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"removeTrailingEmptyLines\"/>\n"
"    </method>\n"
"    <method name=\"getAllDisplayedText\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"getAllDisplayedTextList\">\n"
"      <arg direction=\"out\" type=\"as\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"removeTrailingEmptyLines\"/>\n"
"    </method>\n"
"    <method name=\"getAllDisplayedTextList\">\n"
"      <arg direction=\"out\" type=\"as\"/>\n"
"    </method>\n"
"    <method name=\"getDisplayedText\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"startLineOffset\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"endLineOffset\"/>\n"
"    </method>\n"
"    <method name=\"getDisplayedTextList\">\n"
"      <arg direction=\"out\" type=\"as\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"startLineOffset\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"endLineOffset\"/>\n"
"    </method>\n"
"    <method name=\"activationToken\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"cookieForRequest\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    SessionAdaptor(Konsole::Session *parent);
    ~SessionAdaptor() override;

    inline Konsole::Session *parent() const
    { return static_cast<Konsole::Session *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QString activationToken(const QString &cookieForRequest);
    QByteArray codec();
    bool copyInputToAllSessions();
    bool copyInputToNone();
    bool copyInputToSessions(const QList<int> &sessions);
    QList<int> copyingSessions();
    QStringList environment();
    QList<int> feederSessions();
    bool flowControlEnabled();
    int foregroundProcessId();
    QString getAllDisplayedText();
    QString getAllDisplayedText(bool removeTrailingEmptyLines);
    QStringList getAllDisplayedTextList();
    QStringList getAllDisplayedTextList(bool removeTrailingEmptyLines);
    QString getDisplayedText(int startLineOffset, int endLineOffset);
    QStringList getDisplayedTextList(int startLineOffset, int endLineOffset);
    int historySize();
    bool isMonitorActivity();
    bool isMonitorPrompt();
    bool isMonitorSilence();
    int processId();
    QString profile();
    void runCommand(const QString &command);
    void sendMouseEvent(int buttons, int column, int line, int eventType);
    void sendText(const QString &text);
    bool setCodec(const QByteArray &name);
    void setEnvironment(const QStringList &environment);
    void setFlowControlEnabled(bool enabled);
    void setHistorySize(int lines);
    void setMonitorActivity(bool in0);
    void setMonitorPrompt(bool in0);
    void setMonitorSilence(bool in0);
    void setMonitorSilenceSeconds(int seconds);
    void setProfile(const QString &profileName);
    void setTabTitleFormat(int context, const QString &format);
    void setTitle(int role, const QString &title);
    QString shellSessionId();
    QString tabTitleFormat(int context);
    QString title(int role);
Q_SIGNALS: // SIGNALS
};

#endif
